name: Business Central AL CI/CD

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Cache Business Central Artifact
        uses: actions/cache@v4
        with:
          path: C:\bc-cache
          key: bc-artifact-${{ runner.os }}-w1-26.0.30643.32531

      - name: Install BcContainerHelper
        run: |
          Set-ExecutionPolicy Bypass -Scope Process -Force
          Install-Module BcContainerHelper -Force -AllowClobber
        shell: pwsh

            - name: Setup Business Central Development Environment
        run: |
          Import-Module BcContainerHelper

          # Define paths
          $artifactCachePath = "C:\bc-cache"
          $artifactVersion = "26.0.30643.32531"
          $artifactUrl = Get-BcArtifactUrl -country "w1" -type "sandbox" -version $artifactVersion
          
          # Ensure cache directory exists
          if (!(Test-Path $artifactCachePath)) {
            New-Item -ItemType Directory -Path $artifactCachePath
          }
          
          # Check if the artifact is already cached
          if (!(Test-Path "$artifactCachePath\$artifactVersion.zip")) {
            Write-Host "Downloading Business Central artifact..."
            Invoke-WebRequest -Uri $artifactUrl -OutFile "$artifactCachePath\$artifactVersion.zip"
          } else {
            Write-Host "Using cached Business Central artifact."
          }
          
          # Create container with credentials from GitHub Secrets
          $username = $env:BC_USERNAME
          $password = $env:BC_PASSWORD
          
          New-BcContainer -accept_eula -containerName "BCContainer" -auth NavUserPassword `
            -Credential (New-Object System.Management.Automation.PSCredential($username, (ConvertTo-SecureString $password -AsPlainText -Force))) `
            -artifactUrl "$artifactCachePath\$artifactVersion.zip" -licenseFile "C:\Path\To\Your\License.flf" `
            -publicDnsName "CVRDev.dev.navertica.com" -updateHosts
        shell: pwsh

      - name: Compile AL Project
        run: |
          Import-Module BcContainerHelper
          Compile-BcContainerApp -containerName "BCContainer" -appProjectFolder "$env:GITHUB_WORKSPACE" -appOutputFile "Output.app"
        shell: pwsh

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: business-central-app
          path: Output.app

  test:
    runs-on: windows-latest
    needs: build
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: business-central-app
          path: .

      - name: Run Business Central Tests
        run: |
          Import-Module BcContainerHelper
          Invoke-BcContainerTest -containerName "BCContainer" -testSuite "Default"
        shell: pwsh

  deploy:
    runs-on: windows-latest
    needs: test
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: business-central-app
          path: .

      - name: Deploy to Business Central Sandbox
        run: |
          Import-Module BcContainerHelper
          Publish-BcContainerApp -containerName "BCContainer" -appFile "Output.app"
        shell: pwsh
