name: Business Central AL CI/CD

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install BcContainerHelper
        run: |
          # Ensure PowerShellGet is updated
          Install-Module PowerShellGet -Force -AllowClobber -Scope CurrentUser
      
          # Manually install the NuGet provider
          [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
          Install-PackageProvider -Name NuGet -MinimumVersion 2.8.5.201 -Force -Scope CurrentUser
      
          # Set PSGallery as trusted source
          Set-PSRepository -Name 'PSGallery' -InstallationPolicy Trusted
      
          # Install BcContainerHelper
          Install-Module BcContainerHelper -Force -AllowClobber -Scope CurrentUser
          Import-Module BcContainerHelper
        shell: pwsh

      - name: Setup Business Central Container
        run: |
          Import-Module BcContainerHelper
          $securePassword = ConvertTo-SecureString "YourSecurePassword" -AsPlainText -Force
          $credential = New-Object System.Management.Automation.PSCredential ("bcadmin", $securePassword)
          
          New-BcContainer `
            -accept_eula `
            -containerName "BCContainer" `
            -imageName "mcr.microsoft.com/businesscentral/sandbox" `
            -auth UserPassword `
            -updateHosts `
            -credential $credential `
            -licenseFile $null  # Set licenseFile to null if you don't have one
        shell: pwsh

      - name: Compile AL Project inside BC Container
        run: |
          Import-Module BcContainerHelper
          Run-ALCInBcContainer -containerName "BCContainer" `
            -alProjectFolder "$env:GITHUB_WORKSPACE\src" `
            -appFilePath "$env:GITHUB_WORKSPACE\Output.app"
        shell: pwsh

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: business-central-app
          path: Output.app

  test:
    runs-on: windows-latest
    needs: build
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: business-central-app
          path: .

      - name: Run Business Central Tests
        run: |
          Import-Module BcContainerHelper
          $securePassword = ConvertTo-SecureString "${{ secrets.BC_PASSWORD }}" -AsPlainText -Force
          $credential = New-Object System.Management.Automation.PSCredential ("${{ secrets.BC_USERNAME }}", $securePassword)

          Invoke-BCAppTests -containerName "BCContainer" -credential $credential -testSuite "Default"
        shell: pwsh

  deploy:
    runs-on: windows-latest
    needs: test
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: business-central-app
          path: .

      - name: Deploy to Business Central
        run: |
          Import-Module BcContainerHelper
          $securePassword = ConvertTo-SecureString "${{ secrets.BC_PASSWORD }}" -AsPlainText -Force
          $credential = New-Object System.Management.Automation.PSCredential ("${{ secrets.BC_USERNAME }}", $securePassword)

          Publish-BCApp -containerName "BCContainer" -credential $credential -appFilePath "business-central-app/Output.app"
        shell: pwsh
